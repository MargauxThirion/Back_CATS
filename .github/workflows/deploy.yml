name: Deploy to AWS

on:
  push:
    branches:
      - main  # Déclenche le workflow lorsqu'un push est effectué sur la branche 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest  # Utilise un environnement Ubuntu pour exécuter le workflow

    steps:
      # 1. Vérifier le code
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Configurer AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1  # Remplacez avec votre région AWS

      # 3. Télécharger et installer ecs-cli depuis l'archive
      - name: Install ecs-cli
        run: |
          # Télécharger et extraire ecs-cli
          curl -Lo ecs-cli.tar.gz https://github.com/aws/amazon-ecs-cli/releases/download/v1.21.0/ecs-cli-linux-amd64.tar.gz
          tar -xzvf ecs-cli.tar.gz
          sudo mv ecs-cli-linux-amd64 /usr/local/bin/ecs-cli
          sudo chmod +x /usr/local/bin/ecs-cli

      # Vérification de l'installation de ecs-cli
      - name: Verify ecs-cli installation
        run: |
          ecs-cli --version  # Vérifie que ecs-cli est bien installé

      # 4. Construire l'image Docker
      - name: Build Docker image
        run: |
          docker build -t cats-back .

      # 5. Se connecter à ECR et pousser l'image Docker
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 084828604086.dkr.ecr.eu-north-1.amazonaws.com
          docker tag cats-back:latest 084828604086.dkr.ecr.eu-north-1.amazonaws.com/cats/back:latest
          docker push 084828604086.dkr.ecr.eu-north-1.amazonaws.com/cats/back:latest

      # 6. Mettre à jour ECS (avec ecs-cli)
      - name: Update ECS Service
        run: |
          ecs-cli compose --file docker-compose.yml --project-name cats-back service up
